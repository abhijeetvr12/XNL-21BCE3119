{"ast":null,"code":"var _jsxFileName = \"D:\\\\XNL-21BCE3119-SDE-8\\\\frontend\\\\src\\\\Metrics.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst Metrics = () => {\n  _s();\n  const [metrics, setMetrics] = useState({\n    request_count: 0,\n    uptime_seconds: 0,\n    active_users: 0\n  });\n  useEffect(() => {\n    const fetchMetrics = () => {\n      fetch('/metrics').then(response => response.json()).then(data => setMetrics(data)).catch(() => setMetrics({\n        request_count: 0,\n        uptime_seconds: 0,\n        active_users: 0\n      }));\n    };\n    fetchMetrics();\n    const interval = setInterval(fetchMetrics, 5000); // Update every 5 seconds\n    return () => clearInterval(interval);\n  }, []);\n  const chartData = {\n    labels: ['Requests', 'Uptime (s)', 'Active Users'],\n    datasets: [{\n      label: 'System Metrics',\n      data: [metrics.request_count, metrics.uptime_seconds, metrics.active_users],\n      backgroundColor: ['#36A2EB', '#FF6384', '#FFCE56']\n    }]\n  };\n  const options = {\n    scales: {\n      y: {\n        beginAtZero: true\n      }\n    },\n    plugins: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: 'System Metrics'\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"System Metrics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Requests: \", metrics.request_count, \" | Uptime: \", Math.round(metrics.uptime_seconds), \"s | Users: \", metrics.active_users]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: '600px',\n        margin: '0 auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Metrics, \"FBoFZqtgTK6SIfpmfAr4qxFdcb4=\");\n_c = Metrics;\nexport default Metrics;\nvar _c;\n$RefreshReg$(_c, \"Metrics\");","map":{"version":3,"names":["React","useEffect","useState","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","Metrics","_s","metrics","setMetrics","request_count","uptime_seconds","active_users","fetchMetrics","fetch","then","response","json","data","catch","interval","setInterval","clearInterval","chartData","labels","datasets","label","backgroundColor","options","scales","y","beginAtZero","plugins","legend","display","title","text","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Math","round","style","maxWidth","margin","_c","$RefreshReg$"],"sources":["D:/XNL-21BCE3119-SDE-8/frontend/src/Metrics.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\r\n\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\r\n\r\nconst Metrics = () => {\r\n  const [metrics, setMetrics] = useState({ request_count: 0, uptime_seconds: 0, active_users: 0 });\r\n\r\n  useEffect(() => {\r\n    const fetchMetrics = () => {\r\n      fetch('/metrics')\r\n        .then(response => response.json())\r\n        .then(data => setMetrics(data))\r\n        .catch(() => setMetrics({ request_count: 0, uptime_seconds: 0, active_users: 0 }));\r\n    };\r\n    fetchMetrics();\r\n    const interval = setInterval(fetchMetrics, 5000); // Update every 5 seconds\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const chartData = {\r\n    labels: ['Requests', 'Uptime (s)', 'Active Users'],\r\n    datasets: [\r\n      {\r\n        label: 'System Metrics',\r\n        data: [metrics.request_count, metrics.uptime_seconds, metrics.active_users],\r\n        backgroundColor: ['#36A2EB', '#FF6384', '#FFCE56'],\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      y: { beginAtZero: true },\r\n    },\r\n    plugins: {\r\n      legend: { display: false },\r\n      title: { display: true, text: 'System Metrics' },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <h2>System Metrics</h2>\r\n      <p>Requests: {metrics.request_count} | Uptime: {Math.round(metrics.uptime_seconds)}s | Users: {metrics.active_users}</p>\r\n      <div style={{ maxWidth: '600px', margin: '0 auto' }}>\r\n        <Bar data={chartData} options={options} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Metrics;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}