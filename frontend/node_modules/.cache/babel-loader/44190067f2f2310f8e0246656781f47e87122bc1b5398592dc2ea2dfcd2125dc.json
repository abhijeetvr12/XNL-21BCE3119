{"ast":null,"code":"import React,{useEffect,useState}from'react';import{Line}from'react-chartjs-2';import{Chart as ChartJS,CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend}from'chart.js';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend);const Dashboard=()=>{const[healthStatus,setHealthStatus]=useState('Checking...');useEffect(()=>{fetch('/health').then(response=>response.json()).then(data=>setHealthStatus(data.status)).catch(()=>setHealthStatus('Error'));},[]);const chartData={labels:['9:00','9:15','9:30','9:45','10:00'],// Simulated time\ndatasets:[{label:'Requests per Minute',data:[5,10,8,15,12],// Simulated data\nfill:false,borderColor:'#36A2EB',tension:0.1}]};const options={scales:{y:{beginAtZero:true}},plugins:{legend:{position:'top'},title:{display:true,text:'Request Trends'}}};return/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"System Health\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Status: \",/*#__PURE__*/_jsx(\"span\",{style:{color:healthStatus==='ok'?'green':'red'},children:healthStatus})]}),/*#__PURE__*/_jsx(\"div\",{style:{maxWidth:'600px',margin:'0 auto'},children:/*#__PURE__*/_jsx(Line,{data:chartData,options:options})})]});};export default Dashboard;","map":{"version":3,"names":["React","useEffect","useState","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsx","_jsx","jsxs","_jsxs","register","Dashboard","healthStatus","setHealthStatus","fetch","then","response","json","data","status","catch","chartData","labels","datasets","label","fill","borderColor","tension","options","scales","y","beginAtZero","plugins","legend","position","title","display","text","className","children","style","color","maxWidth","margin"],"sources":["D:/XNL-21BCE3119-SDE-8/frontend/src/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\r\n\r\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\r\n\r\nconst Dashboard = () => {\r\n  const [healthStatus, setHealthStatus] = useState('Checking...');\r\n\r\n  useEffect(() => {\r\n    fetch('/health')\r\n      .then(response => response.json())\r\n      .then(data => setHealthStatus(data.status))\r\n      .catch(() => setHealthStatus('Error'));\r\n  }, []);\r\n\r\n  const chartData = {\r\n    labels: ['9:00', '9:15', '9:30', '9:45', '10:00'], // Simulated time\r\n    datasets: [\r\n      {\r\n        label: 'Requests per Minute',\r\n        data: [5, 10, 8, 15, 12], // Simulated data\r\n        fill: false,\r\n        borderColor: '#36A2EB',\r\n        tension: 0.1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      y: { beginAtZero: true },\r\n    },\r\n    plugins: {\r\n      legend: { position: 'top' },\r\n      title: { display: true, text: 'Request Trends' },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <h2>System Health</h2>\r\n      <p>Status: <span style={{ color: healthStatus === 'ok' ? 'green' : 'red' }}>{healthStatus}</span></p>\r\n      <div style={{ maxWidth: '600px', margin: '0 auto' }}>\r\n        <Line data={chartData} options={options} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,IAAI,KAAQ,iBAAiB,CACtC,OAASC,KAAK,GAAI,CAAAC,OAAO,CAAEC,aAAa,CAAEC,WAAW,CAAEC,YAAY,CAAEC,WAAW,CAAEC,KAAK,CAAEC,OAAO,CAAEC,MAAM,KAAQ,UAAU,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE3HX,OAAO,CAACY,QAAQ,CAACX,aAAa,CAAEC,WAAW,CAAEC,YAAY,CAAEC,WAAW,CAAEC,KAAK,CAAEC,OAAO,CAAEC,MAAM,CAAC,CAE/F,KAAM,CAAAM,SAAS,CAAGA,CAAA,GAAM,CACtB,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGlB,QAAQ,CAAC,aAAa,CAAC,CAE/DD,SAAS,CAAC,IAAM,CACdoB,KAAK,CAAC,SAAS,CAAC,CACbC,IAAI,CAACC,QAAQ,EAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,EAAIL,eAAe,CAACK,IAAI,CAACC,MAAM,CAAC,CAAC,CAC1CC,KAAK,CAAC,IAAMP,eAAe,CAAC,OAAO,CAAC,CAAC,CAC1C,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAQ,SAAS,CAAG,CAChBC,MAAM,CAAE,CAAC,MAAM,CAAE,MAAM,CAAE,MAAM,CAAE,MAAM,CAAE,OAAO,CAAC,CAAE;AACnDC,QAAQ,CAAE,CACR,CACEC,KAAK,CAAE,qBAAqB,CAC5BN,IAAI,CAAE,CAAC,CAAC,CAAE,EAAE,CAAE,CAAC,CAAE,EAAE,CAAE,EAAE,CAAC,CAAE;AAC1BO,IAAI,CAAE,KAAK,CACXC,WAAW,CAAE,SAAS,CACtBC,OAAO,CAAE,GACX,CAAC,CAEL,CAAC,CAED,KAAM,CAAAC,OAAO,CAAG,CACdC,MAAM,CAAE,CACNC,CAAC,CAAE,CAAEC,WAAW,CAAE,IAAK,CACzB,CAAC,CACDC,OAAO,CAAE,CACPC,MAAM,CAAE,CAAEC,QAAQ,CAAE,KAAM,CAAC,CAC3BC,KAAK,CAAE,CAAEC,OAAO,CAAE,IAAI,CAAEC,IAAI,CAAE,gBAAiB,CACjD,CACF,CAAC,CAED,mBACE5B,KAAA,QAAK6B,SAAS,CAAC,MAAM,CAAAC,QAAA,eACnBhC,IAAA,OAAAgC,QAAA,CAAI,eAAa,CAAI,CAAC,cACtB9B,KAAA,MAAA8B,QAAA,EAAG,UAAQ,cAAAhC,IAAA,SAAMiC,KAAK,CAAE,CAAEC,KAAK,CAAE7B,YAAY,GAAK,IAAI,CAAG,OAAO,CAAG,KAAM,CAAE,CAAA2B,QAAA,CAAE3B,YAAY,CAAO,CAAC,EAAG,CAAC,cACrGL,IAAA,QAAKiC,KAAK,CAAE,CAAEE,QAAQ,CAAE,OAAO,CAAEC,MAAM,CAAE,QAAS,CAAE,CAAAJ,QAAA,cAClDhC,IAAA,CAACX,IAAI,EAACsB,IAAI,CAAEG,SAAU,CAACO,OAAO,CAAEA,OAAQ,CAAE,CAAC,CACxC,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAjB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}