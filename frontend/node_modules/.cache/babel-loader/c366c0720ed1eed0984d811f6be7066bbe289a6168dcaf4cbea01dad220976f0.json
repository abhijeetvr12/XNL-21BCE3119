{"ast":null,"code":"import React,{useEffect,useState}from'react';import{Bar}from'react-chartjs-2';import{Chart as ChartJS,CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend}from'chart.js';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend);const Metrics=()=>{const[metrics,setMetrics]=useState({request_count:0,uptime_seconds:0,active_users:0});useEffect(()=>{const fetchMetrics=()=>{fetch('/metrics').then(response=>response.json()).then(data=>setMetrics(data)).catch(()=>setMetrics({request_count:0,uptime_seconds:0,active_users:0}));};fetchMetrics();const interval=setInterval(fetchMetrics,5000);// Update every 5 seconds\nreturn()=>clearInterval(interval);},[]);const chartData={labels:['Requests','Uptime (s)','Active Users'],datasets:[{label:'System Metrics',data:[metrics.request_count,metrics.uptime_seconds,metrics.active_users],backgroundColor:['#36A2EB','#FF6384','#FFCE56']}]};const options={scales:{y:{beginAtZero:true}},plugins:{legend:{display:false},title:{display:true,text:'System Metrics'}}};return/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"System Metrics\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Requests: \",metrics.request_count,\" | Uptime: \",Math.round(metrics.uptime_seconds),\"s | Users: \",metrics.active_users]}),/*#__PURE__*/_jsx(\"div\",{style:{maxWidth:'600px',margin:'0 auto'},children:/*#__PURE__*/_jsx(Bar,{data:chartData,options:options})})]});};export default Metrics;","map":{"version":3,"names":["React","useEffect","useState","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsx","_jsx","jsxs","_jsxs","register","Metrics","metrics","setMetrics","request_count","uptime_seconds","active_users","fetchMetrics","fetch","then","response","json","data","catch","interval","setInterval","clearInterval","chartData","labels","datasets","label","backgroundColor","options","scales","y","beginAtZero","plugins","legend","display","title","text","className","children","Math","round","style","maxWidth","margin"],"sources":["D:/XNL-21BCE3119-SDE-8/frontend/src/Metrics.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\r\n\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\r\n\r\nconst Metrics = () => {\r\n  const [metrics, setMetrics] = useState({ request_count: 0, uptime_seconds: 0, active_users: 0 });\r\n\r\n  useEffect(() => {\r\n    const fetchMetrics = () => {\r\n      fetch('/metrics')\r\n        .then(response => response.json())\r\n        .then(data => setMetrics(data))\r\n        .catch(() => setMetrics({ request_count: 0, uptime_seconds: 0, active_users: 0 }));\r\n    };\r\n    fetchMetrics();\r\n    const interval = setInterval(fetchMetrics, 5000); // Update every 5 seconds\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const chartData = {\r\n    labels: ['Requests', 'Uptime (s)', 'Active Users'],\r\n    datasets: [\r\n      {\r\n        label: 'System Metrics',\r\n        data: [metrics.request_count, metrics.uptime_seconds, metrics.active_users],\r\n        backgroundColor: ['#36A2EB', '#FF6384', '#FFCE56'],\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      y: { beginAtZero: true },\r\n    },\r\n    plugins: {\r\n      legend: { display: false },\r\n      title: { display: true, text: 'System Metrics' },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <h2>System Metrics</h2>\r\n      <p>Requests: {metrics.request_count} | Uptime: {Math.round(metrics.uptime_seconds)}s | Users: {metrics.active_users}</p>\r\n      <div style={{ maxWidth: '600px', margin: '0 auto' }}>\r\n        <Bar data={chartData} options={options} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Metrics;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,GAAG,KAAQ,iBAAiB,CACrC,OAASC,KAAK,GAAI,CAAAC,OAAO,CAAEC,aAAa,CAAEC,WAAW,CAAEC,UAAU,CAAEC,KAAK,CAAEC,OAAO,CAAEC,MAAM,KAAQ,UAAU,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE5GV,OAAO,CAACW,QAAQ,CAACV,aAAa,CAAEC,WAAW,CAAEC,UAAU,CAAEC,KAAK,CAAEC,OAAO,CAAEC,MAAM,CAAC,CAEhF,KAAM,CAAAM,OAAO,CAAGA,CAAA,GAAM,CACpB,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGjB,QAAQ,CAAC,CAAEkB,aAAa,CAAE,CAAC,CAAEC,cAAc,CAAE,CAAC,CAAEC,YAAY,CAAE,CAAE,CAAC,CAAC,CAEhGrB,SAAS,CAAC,IAAM,CACd,KAAM,CAAAsB,YAAY,CAAGA,CAAA,GAAM,CACzBC,KAAK,CAAC,UAAU,CAAC,CACdC,IAAI,CAACC,QAAQ,EAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,EAAIT,UAAU,CAACS,IAAI,CAAC,CAAC,CAC9BC,KAAK,CAAC,IAAMV,UAAU,CAAC,CAAEC,aAAa,CAAE,CAAC,CAAEC,cAAc,CAAE,CAAC,CAAEC,YAAY,CAAE,CAAE,CAAC,CAAC,CAAC,CACtF,CAAC,CACDC,YAAY,CAAC,CAAC,CACd,KAAM,CAAAO,QAAQ,CAAGC,WAAW,CAACR,YAAY,CAAE,IAAI,CAAC,CAAE;AAClD,MAAO,IAAMS,aAAa,CAACF,QAAQ,CAAC,CACtC,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAG,SAAS,CAAG,CAChBC,MAAM,CAAE,CAAC,UAAU,CAAE,YAAY,CAAE,cAAc,CAAC,CAClDC,QAAQ,CAAE,CACR,CACEC,KAAK,CAAE,gBAAgB,CACvBR,IAAI,CAAE,CAACV,OAAO,CAACE,aAAa,CAAEF,OAAO,CAACG,cAAc,CAAEH,OAAO,CAACI,YAAY,CAAC,CAC3Ee,eAAe,CAAE,CAAC,SAAS,CAAE,SAAS,CAAE,SAAS,CACnD,CAAC,CAEL,CAAC,CAED,KAAM,CAAAC,OAAO,CAAG,CACdC,MAAM,CAAE,CACNC,CAAC,CAAE,CAAEC,WAAW,CAAE,IAAK,CACzB,CAAC,CACDC,OAAO,CAAE,CACPC,MAAM,CAAE,CAAEC,OAAO,CAAE,KAAM,CAAC,CAC1BC,KAAK,CAAE,CAAED,OAAO,CAAE,IAAI,CAAEE,IAAI,CAAE,gBAAiB,CACjD,CACF,CAAC,CAED,mBACE/B,KAAA,QAAKgC,SAAS,CAAC,MAAM,CAAAC,QAAA,eACnBnC,IAAA,OAAAmC,QAAA,CAAI,gBAAc,CAAI,CAAC,cACvBjC,KAAA,MAAAiC,QAAA,EAAG,YAAU,CAAC9B,OAAO,CAACE,aAAa,CAAC,aAAW,CAAC6B,IAAI,CAACC,KAAK,CAAChC,OAAO,CAACG,cAAc,CAAC,CAAC,aAAW,CAACH,OAAO,CAACI,YAAY,EAAI,CAAC,cACxHT,IAAA,QAAKsC,KAAK,CAAE,CAAEC,QAAQ,CAAE,OAAO,CAAEC,MAAM,CAAE,QAAS,CAAE,CAAAL,QAAA,cAClDnC,IAAA,CAACV,GAAG,EAACyB,IAAI,CAAEK,SAAU,CAACK,OAAO,CAAEA,OAAQ,CAAE,CAAC,CACvC,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAArB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}