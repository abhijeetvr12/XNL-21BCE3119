{"ast":null,"code":"var _jsxFileName = \"D:\\\\XNL-21BCE3119-SDE-8\\\\frontend\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst Dashboard = () => {\n  _s();\n  const [healthStatus, setHealthStatus] = useState('Checking...');\n  useEffect(() => {\n    // Fetch health status from backend\n    fetch('http://127.0.0.1:5000/health').then(response => response.json()).then(data => setHealthStatus(data.status)).catch(() => setHealthStatus('Error'));\n  }, []);\n  const chartData = {\n    labels: ['Test Coverage'],\n    datasets: [{\n      label: 'Coverage (%)',\n      data: [80],\n      // Static for demo\n      backgroundColor: '#36A2EB',\n      borderColor: '#36A2EB',\n      borderWidth: 1\n    }]\n  };\n  const options = {\n    scales: {\n      y: {\n        beginAtZero: true,\n        max: 100\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CI/CD Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Health Status: \", healthStatus]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: '400px',\n        margin: '0 auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"1p+Kjo93Hj/rKUxEQZ3UGLXWlnM=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","Dashboard","_s","healthStatus","setHealthStatus","fetch","then","response","json","data","status","catch","chartData","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","scales","y","beginAtZero","max","children","fileName","_jsxFileName","lineNumber","columnNumber","style","maxWidth","margin","_c","$RefreshReg$"],"sources":["D:/XNL-21BCE3119-SDE-8/frontend/src/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\r\n\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\r\n\r\nconst Dashboard = () => {\r\n  const [healthStatus, setHealthStatus] = useState('Checking...');\r\n\r\n  useEffect(() => {\r\n    // Fetch health status from backend\r\n    fetch('http://127.0.0.1:5000/health')\r\n      .then(response => response.json())\r\n      .then(data => setHealthStatus(data.status))\r\n      .catch(() => setHealthStatus('Error'));\r\n  }, []);\r\n\r\n  const chartData = {\r\n    labels: ['Test Coverage'],\r\n    datasets: [\r\n      {\r\n        label: 'Coverage (%)',\r\n        data: [80], // Static for demo\r\n        backgroundColor: '#36A2EB',\r\n        borderColor: '#36A2EB',\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n        max: 100,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>CI/CD Dashboard</h1>\r\n      <p>Health Status: {healthStatus}</p>\r\n      <div style={{ maxWidth: '400px', margin: '0 auto' }}>\r\n        <Bar data={chartData} options={options} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SAASC,KAAK,IAAIC,OAAO,EAAEC,aAAa,EAAEC,WAAW,EAAEC,UAAU,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5GR,OAAO,CAACS,QAAQ,CAACR,aAAa,EAAEC,WAAW,EAAEC,UAAU,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAEhF,MAAMI,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,aAAa,CAAC;EAE/DD,SAAS,CAAC,MAAM;IACd;IACAkB,KAAK,CAAC,8BAA8B,CAAC,CAClCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIL,eAAe,CAACK,IAAI,CAACC,MAAM,CAAC,CAAC,CAC1CC,KAAK,CAAC,MAAMP,eAAe,CAAC,OAAO,CAAC,CAAC;EAC1C,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,SAAS,GAAG;IAChBC,MAAM,EAAE,CAAC,eAAe,CAAC;IACzBC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,cAAc;MACrBN,IAAI,EAAE,CAAC,EAAE,CAAC;MAAE;MACZO,eAAe,EAAE,SAAS;MAC1BC,WAAW,EAAE,SAAS;MACtBC,WAAW,EAAE;IACf,CAAC;EAEL,CAAC;EAED,MAAMC,OAAO,GAAG;IACdC,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,WAAW,EAAE,IAAI;QACjBC,GAAG,EAAE;MACP;IACF;EACF,CAAC;EAED,oBACExB,OAAA;IAAAyB,QAAA,gBACEzB,OAAA;MAAAyB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxB7B,OAAA;MAAAyB,QAAA,GAAG,iBAAe,EAACrB,YAAY;IAAA;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpC7B,OAAA;MAAK8B,KAAK,EAAE;QAAEC,QAAQ,EAAE,OAAO;QAAEC,MAAM,EAAE;MAAS,CAAE;MAAAP,QAAA,eAClDzB,OAAA,CAACV,GAAG;QAACoB,IAAI,EAAEG,SAAU;QAACO,OAAO,EAAEA;MAAQ;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC1B,EAAA,CA1CID,SAAS;AAAA+B,EAAA,GAAT/B,SAAS;AA4Cf,eAAeA,SAAS;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}