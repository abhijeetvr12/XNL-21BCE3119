{"ast":null,"code":"import React,{useEffect,useState}from'react';import{Bar}from'react-chartjs-2';import{Chart as ChartJS,CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend}from'chart.js';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend);const Dashboard=()=>{const[healthStatus,setHealthStatus]=useState('Checking...');useEffect(()=>{// Fetch health status from backend\nfetch('/health').then(response=>response.json()).then(data=>setHealthStatus(data.status)).catch(()=>setHealthStatus('Error'));},[]);const chartData={labels:['Test Coverage'],datasets:[{label:'Coverage (%)',data:[80],// Static for demo\nbackgroundColor:'#36A2EB',borderColor:'#36A2EB',borderWidth:1}]};const options={scales:{y:{beginAtZero:true,max:100}}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"CI/CD Dashboard\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Health Status: \",healthStatus]}),/*#__PURE__*/_jsx(\"div\",{style:{maxWidth:'400px',margin:'0 auto'},children:/*#__PURE__*/_jsx(Bar,{data:chartData,options:options})})]});};export default Dashboard;","map":{"version":3,"names":["React","useEffect","useState","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsx","_jsx","jsxs","_jsxs","register","Dashboard","healthStatus","setHealthStatus","fetch","then","response","json","data","status","catch","chartData","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","scales","y","beginAtZero","max","children","style","maxWidth","margin"],"sources":["D:/XNL-21BCE3119-SDE-8/frontend/src/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\r\n\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\r\n\r\nconst Dashboard = () => {\r\n  const [healthStatus, setHealthStatus] = useState('Checking...');\r\n\r\n  useEffect(() => {\r\n    // Fetch health status from backend\r\n    fetch('/health')\r\n      .then(response => response.json())\r\n      .then(data => setHealthStatus(data.status))\r\n      .catch(() => setHealthStatus('Error'));\r\n  }, []);\r\n\r\n  const chartData = {\r\n    labels: ['Test Coverage'],\r\n    datasets: [\r\n      {\r\n        label: 'Coverage (%)',\r\n        data: [80], // Static for demo\r\n        backgroundColor: '#36A2EB',\r\n        borderColor: '#36A2EB',\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n        max: 100,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>CI/CD Dashboard</h1>\r\n      <p>Health Status: {healthStatus}</p>\r\n      <div style={{ maxWidth: '400px', margin: '0 auto' }}>\r\n        <Bar data={chartData} options={options} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,GAAG,KAAQ,iBAAiB,CACrC,OAASC,KAAK,GAAI,CAAAC,OAAO,CAAEC,aAAa,CAAEC,WAAW,CAAEC,UAAU,CAAEC,KAAK,CAAEC,OAAO,CAAEC,MAAM,KAAQ,UAAU,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE5GV,OAAO,CAACW,QAAQ,CAACV,aAAa,CAAEC,WAAW,CAAEC,UAAU,CAAEC,KAAK,CAAEC,OAAO,CAAEC,MAAM,CAAC,CAEhF,KAAM,CAAAM,SAAS,CAAGA,CAAA,GAAM,CACtB,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGjB,QAAQ,CAAC,aAAa,CAAC,CAE/DD,SAAS,CAAC,IAAM,CACd;AACAmB,KAAK,CAAC,SAAS,CAAC,CACbC,IAAI,CAACC,QAAQ,EAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,EAAIL,eAAe,CAACK,IAAI,CAACC,MAAM,CAAC,CAAC,CAC1CC,KAAK,CAAC,IAAMP,eAAe,CAAC,OAAO,CAAC,CAAC,CAC1C,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAQ,SAAS,CAAG,CAChBC,MAAM,CAAE,CAAC,eAAe,CAAC,CACzBC,QAAQ,CAAE,CACR,CACEC,KAAK,CAAE,cAAc,CACrBN,IAAI,CAAE,CAAC,EAAE,CAAC,CAAE;AACZO,eAAe,CAAE,SAAS,CAC1BC,WAAW,CAAE,SAAS,CACtBC,WAAW,CAAE,CACf,CAAC,CAEL,CAAC,CAED,KAAM,CAAAC,OAAO,CAAG,CACdC,MAAM,CAAE,CACNC,CAAC,CAAE,CACDC,WAAW,CAAE,IAAI,CACjBC,GAAG,CAAE,GACP,CACF,CACF,CAAC,CAED,mBACEvB,KAAA,QAAAwB,QAAA,eACE1B,IAAA,OAAA0B,QAAA,CAAI,iBAAe,CAAI,CAAC,cACxBxB,KAAA,MAAAwB,QAAA,EAAG,iBAAe,CAACrB,YAAY,EAAI,CAAC,cACpCL,IAAA,QAAK2B,KAAK,CAAE,CAAEC,QAAQ,CAAE,OAAO,CAAEC,MAAM,CAAE,QAAS,CAAE,CAAAH,QAAA,cAClD1B,IAAA,CAACV,GAAG,EAACqB,IAAI,CAAEG,SAAU,CAACO,OAAO,CAAEA,OAAQ,CAAE,CAAC,CACvC,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAjB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}